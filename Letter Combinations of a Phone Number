class Solution {
    public void helper(List<String> ans,StringBuilder sb,String digits,int idx,Map<Character,String> map)
    {
        if(sb.length()>=digits.length())
        {
            ans.add(sb.toString());
            return;
        }
        char c=digits.charAt(idx);
        String str=map.get(c);
        for(int i=0;i<str.length();i++)
        {
            sb.append(str.charAt(i));
            helper(ans,sb,digits,idx+1,map);
            sb.deleteCharAt(sb.length()-1);
        }
    }
    public List<String> letterCombinations(String digits) {
        Map<Character,String>map=new HashMap<>();

        map.put('2',"abc");
        map.put('3',"def");
        map.put('4',"ghi");
        map.put('5',"jkl");
        map.put('6',"mno");
        map.put('7',"pqrs");
        map.put('8',"tuv");
        map.put('9',"wxyz");

        List<String> ans=new ArrayList<>();
        if(digits.length()==0)
        {
            return ans;
        }
        helper(ans,new StringBuilder(),digits,0,map);
        return ans;

    }
}
