class Solution {
    static void helper(int []arr,int tar,int i,List<List<Integer>>ans,List<Integer> l)
    {
        if(i>=arr.length)
        {
            if(tar==0)
            {
               ans.add(new ArrayList<>(l));
            }
            return;
        }
        if(arr[i]<=tar)
        {
            l.add(arr[i]);
            helper(arr,tar-arr[i],i,ans,l);
            l.remove(l.size()-1);
        }
        
        helper(arr,tar,i+1,ans,l);
    }
    public List<List<Integer>> combinationSum(int[] candidates, int target) {
        List<List<Integer>> ans=new ArrayList<>();
        helper(candidates,target,0,ans,new ArrayList<>());
        return ans;
    }
}
