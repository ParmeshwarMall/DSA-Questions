class Solution {
    // Function to return a list of nodes visible from the top view
    // from left to right in Binary Tree.
    static class Pair{
        Node node;
        int hd;
        
        public Pair(Node n,int hd)
        {
            this.node=n;
            this.hd=hd;
        }
    }
    static ArrayList<Integer> topView(Node root) {
        ArrayList<Integer> ans=new ArrayList<>();
        TreeMap<Integer,Integer> map=new TreeMap<>();
        
        Queue<Pair> q=new LinkedList<>();
        q.add(new Pair(root,0));
        
        while(q.size()!=0)
        {
            Pair curr=q.remove();
            Node n=curr.node;
            int hd=curr.hd;
            
            if(!map.containsKey(hd))
            {
                map.put(hd,n.data);
            }
            if(n.left!=null)
            {
                q.add(new Pair(n.left,hd-1));
            }
            if(n.right!=null)
            {
                q.add(new Pair(n.right,hd+1));
            }
        }
        
        for(int i:map.keySet())
        {
            ans.add(map.get(i));
        }
        return ans;
    }
}
