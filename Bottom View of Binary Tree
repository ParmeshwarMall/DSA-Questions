class Solution
{
    //Function to return a list containing the bottom view of the given tree.
    public class Pair{
        Node n;
        int hd;
        
        public Pair(Node n,int hd)
        {
            this.n=n;
            this.hd=hd;
        }
    }
    public ArrayList <Integer> bottomView(Node root)
    {
        ArrayList<Integer> ans=new ArrayList<>();
        TreeMap<Integer,Integer> map=new TreeMap<>();
        Queue<Pair> q=new LinkedList<>();
        
        q.add(new Pair(root,0));
        
        while(q.size()!=0)
        {
            Pair curr=q.remove();
            Node n=curr.n;
            int hd=curr.hd;
            
            map.put(hd,n.data);
            
            if(n.left!=null)
            {
                q.add(new Pair(n.left,hd-1));
            }
            if(n.right!=null)
            {
                q.add(new Pair(n.right,hd+1));
            }
        }
        
        for(int i:map.keySet())
        {
            ans.add(map.get(i));
        }
        
        return ans;
        
        
    }
}
